# Copyright 2018 The TensorFlow Probability Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============================================================================
book_path: /probability/_book.yaml
project_path: /probability/_project.yaml
description: <!--no description-->
landing_page:
  custom_css_path: /site-assets/css/style.css
  rows:
  - heading: TensorFlow Probability is a library for probabilistic reasoning and statistical analysis.
    items:
    - description: >
        TensorFlow Probability (TFP) is for statisticians, ML researchers,
        data&nbsp;scientists, and scientists who want to get the most out of
        their dataâ€”encoding their domain knowledge to understand the data and
        make predictions. TFP lets you:
        <ul>
          <li>Quantify uncertainty in both the inputs and outputs of your model.</li>
          <li>Handle data with more features than examples.</li>
          <li>Support risk-conscious decision-making.</li>
          <li>Reason about hidden or causal processes.</li>
          <li>Leverage structure in data.</li>
        </ul>
        TensorFlow Probability enjoys the benefits of TensorFlow: build, fit,
        and deploy a model, then scale to production. To get started, see the
        <a href="./overview">TensorFlow Probability Guide</a>.

    - code_block: |
        <pre class = "prettyprint">
        import tensorflow as tf
        import tensorflow_probability as tfp

        # Example: Monte Carlo importance weighted calculation of an integral
        d = tfp.distributions.Kumaraswamy(concentration1=0.9,
                                          concentration0=1.1)
        x = d.sample(int(100e3))  # Samples are in the unit interval.
        z = tf.reduce_mean((4. / (1. + x**2)) / d.prob(x))
        # ==> z is approximately 3.1416 (Easy as pie!)

        # Example: Logistic regression. Load fake data and results:
        x = tfp.distributions.Normal(loc=0., scale=1.).sample(int(100e3))
        y = tfp.distributions.Bernoulli(logits=1.618 * x).sample()
        w, linear_response, is_converged, num_iter = tfp.glm.fit(
            model_matrix=x[:, tf.newaxis],
            response=tf.to_float(y),
            model=tfp.glm.Bernoulli())
        # ==> w is approximately [1.618] (We're golden!)
        </pre>
        {% dynamic if request.tld != 'cn' %}
        <a class="colab-button" target="_blank" href="https://colab.research.google.com/github/tensorflow/probability/blob/master/g3doc/_index.ipynb">Run in a <span>Notebook</span></a>
        {% dynamic endif %}

  - classname: devsite-landing-row-cards
    items:
    - heading: Introducing TensorFlow Probability
      image_path: /ecosystem/images/tf-logo-card-16x9.png
      path: https://medium.com/tensorflow/introducing-tensorflow-probability-dca4c304e245
      buttons:
      - label: Read on TensorFlow blog
        path: https://medium.com/tensorflow/introducing-tensorflow-probability-dca4c304e245
    - heading: Probabilistic Machine Learning in TensorFlow
      youtube_id: BjUkL8DFH5Q
      buttons:
      - label: Watch the video
        path: https://www.youtube.com/watch?v=BjUkL8DFH5Q
    - heading: TensorFlow Distributions
      image_path: /ecosystem/images/tf-logo-card-16x9.png
      path: https://arxiv.org/abs/1711.10604
      buttons:
      - label: Read the paper
        path: https://arxiv.org/abs/1711.10604
    - heading: TensorFlow Probability on GitHub
      image_path: /ecosystem/images/github-card-16x9.png
      path: https://github.com/tensorflow/probability
      buttons:
      - label: View on GitHub
        path: https://github.com/tensorflow/probability
